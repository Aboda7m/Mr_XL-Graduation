@page "/login"
@inject Mr_XL_Graduation.Services.UserService UserService
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager

<link href="css/Login.css" rel="stylesheet" />

<h2 style="text-align:center">Login Form</h2>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div style="color: red; text-align: center;">@ErrorMessage</div>
}

<form @onsubmit="HandleLogin">
    <div class="imgcontainer">
        <img src="img_avatar2.png" alt="Avatar" class="avatar">
    </div>

    <div class="container">
        <label for="userType"><b>User Type</b></label>
        <select @bind="UserType" required>
            <option value="Student">Student</option>
            <option value="Admin">Admin</option>
        </select>

        <label for="uname"><b>Username</b></label>
        <input type="text" @bind="Username" placeholder="Enter Username" required>

        <label for="psw"><b>Password</b></label>
        <input type="password" @bind="Password" placeholder="Enter Password" required>

        <button type="submit">Login</button>
        <label>
            <input type="checkbox" checked="checked" name="remember"> Remember me
        </label>
    </div>

    <div class="container" style="background-color:#f1f1f1">
        <button type="button" class="cancelbtn" @onclick="CancelLogin">Cancel</button>
        <span class="psw">Forgot <a href="#">password?</a></span>
        <button type="button" @onclick="GoToRegister">Register as New Student</button>
    </div>
</form>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }
    private string UserType { get; set; } = "Student"; // Default user type

    private async Task HandleLogin()
    {
        ErrorMessage = null; // Clear previous error messages

        try
        {
            var user = await UserService.ValidateUserAsync(Username, Password, UserType);
            if (user != null)
            {
                // Set user session
                var session = HttpContextAccessor.HttpContext.Session; // Access session through HttpContextAccessor
                session.SetString("Username", user.Username);
                session.SetString("IsAdmin", user.IsAdmin.ToString());

                // Redirect to the welcome page with the username
                string redirectUrl = user.IsAdmin ? "/admin/dashboard" : $"/welcome/{Username}";
                NavigationManager.NavigateTo(redirectUrl);
            }
            else
            {
                ErrorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }

    private void CancelLogin()
    {
        NavigationManager.NavigateTo("/home"); // Assuming there's a home page
    }

    private void GoToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}
